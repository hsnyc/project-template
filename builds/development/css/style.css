/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
@import "https://fonts.googleapis.com/css?family=Nunito+Sans";
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*! ---- normalize.css v3.0.3 END ----- */
/* https://fonts.googleapis.com/css?family=Space+Mono */
/*
    font-family: 'Nunito Sans', sans-serif;
    font-style: normal;

    Font Weights:
    - Regular
    - Regular Italic
    - Bold
    - Bold Italic
*/
/* Var Ends */
/* FlexBox Cheat Sheet:::::::::::::::::
  
flex-flow: [flex-direction] [flex-wrap]
    - flex-flow: row nowrap;

flex: [flex-grow] [flex-shrink] [flex-basis] | defaults: 0 1 auto;
  flex-grow: How much of the positive free space does this item get?
  flex-shrink: How much negative free space can be removed from this item?
  flex-basis: What is the size of the item before growing and shrinking happens?

:::Samples:::
  - flex: 0 1 auto; ( Items will not grow larger than their flex-basis size.
                      Items use size set on the item, or get the size from the content )
  - flex: 1 1 auto; (items can grow and fill the container as well as shrink if required)
  - flex: 1 1 0; (Completely ignore the size set on the item. The items can grow and shrink from a flex-basis of 0)
  - flex-basis: 200px; (The items can grow and shrink from a flex-basis of 200px)

align-items: [stretch] | [flex-start] | [flex-end] | [center]
  - this property will align the items on the cross axis.

justify-content: [flex-start] | [flex-end] | [center] | [space-around] | [space-between] | [space-evenly]
  - this property is used to align the items on the main axis, the direction in which flex-direction has set the flow.

*/
*, *:before, *:after {
  box-sizing: border-box; }

body {
  font-family: "Nunito Sans", sans-serif;
  color: #65646A; }

h1 {
  font-size: calc(24px + (40 - 24) * ((100vw - 200px) / (1600 - 200))); }

h2 {
  font-size: calc(22px + (36 - 22) * ((100vw - 200px) / (1600 - 200))); }

h3 {
  font-size: calc(20px + (32 - 20) * ((100vw - 200px) / (1600 - 200))); }

h4 {
  font-size: calc(18px + (28 - 18) * ((100vw - 200px) / (1600 - 200))); }

h5 {
  font-size: calc(16px + (24 - 16) * ((100vw - 200px) / (1600 - 200))); }

h1, h2, h3, h4, h5 {
  font-weight: normal;
  margin: 0;
  padding: .8em 0 0; }

p {
  font-style: normal;
  font-weight: 300;
  margin: 18px 0;
  font-size: calc(16px + (22 - 16) * ((100vw - 200px) / (1600 - 200))); }

/* section wrapper */
.wrapper {
  width: 100%;
  max-width: 1200px;
  padding: 10px 20px;
  margin: 0 auto; }

/*=== Buttons ===*/
/* default button */
.button {
  background-color: #00B3E3;
  border: none;
  border-radius: 100px;
  color: #fff;
  font-weight: 300;
  font-size: 14px;
  text-transform: uppercase;
  padding: 15px 46px;
  transition: opacity 0.5s ease; }
  .button:hover {
    opacity: 0.8; }

.group:after {
  content: "";
  display: table;
  clear: both; }

.outdatedbrowser {
  margin: 0 auto;
  background: #ccc;
  color: #0075C9;
  padding: 1em;
  text-align: center; }
  .outdatedbrowser a {
    color: #dd6f53; }

/*==== HEADER ====*/
nav {
  display: flex;
  flex-flow: row nowrap;
  padding: 10px 0;
  align-items: center;
  /* Smoother animations */ }
  nav *,
  nav *:before,
  nav *:after {
    transform: translate3d(0, 0, 0); }

.logo {
  flex: 1 1 20%;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center; }

.nav-menu {
  /* position: relative; */
  flex: 1 1 80%;
  list-style: none;
  text-align: right;
  margin-right: 20px;
  z-index: 900;
  outline: none; }

.nav-menu li {
  display: inline-block;
  padding: 20px; }

.nav-menu li:hover {
  cursor: pointer; }

.sub-menu {
  opacity: 0;
  width: 100%;
  position: absolute;
  color: #fff;
  background-color: #4f5d75;
  padding: 0;
  border-radius: 4px;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);
  transition: opacity 400ms cubic-bezier(0.68, -0.08, 0.04, 1.15), transform 400ms cubic-bezier(0.68, -0.08, 0.04, 1.15), scale 400ms cubic-bezier(0.68, -0.08, 0.04, 1.15);
  outline: none; }

.sub-menu:after {
  width: 0px;
  height: 0px;
  position: absolute;
  top: 0%;
  left: 50%;
  content: '';
  transform: translate(0%, -100%);
  border-left: 7px solid transparent;
  border-right: 7px solid transparent;
  border-bottom: 7px solid #4f5d75; }

.sub-menu li {
  display: block;
  text-align: left;
  padding: 10px 20px; }

.sub-menu li:hover {
  border-radius: 4px;
  background-color: #3e495e; }

.menu-icon {
  -ms-transition: -ms-transform 400ms cubic-bezier(0.68, -0.08, 0.04, 1.15);
  transition: transform 400ms cubic-bezier(0.68, -0.08, 0.04, 1.15); }

.spin {
  transform: rotate(180deg);
  -ms-transform: rotate(180deg); }

.show-menu {
  opacity: 1;
  transform: translate(0px, 20px); }

.show-mobile-menu {
  margin-top: 20px; }

/* mobile menu button */
#roundButton {
  display: none;
  position: fixed;
  top: 24px;
  right: 28px;
  background-color: #F9F9F9;
  margin-bottom: 20px;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: 4px solid #65646A;
  outline: none;
  align-self: flex-end;
  z-index: 1000; }

#roundButton:hover {
  cursor: pointer; }

#roundButton:active {
  border-color: #EA6852;
  background-color: #65646A; }

.navicon-button {
  display: inline-block;
  position: relative;
  transition: .5s/2;
  cursor: pointer;
  user-select: none;
  opacity: .8; }
  .navicon-button .navicon:before, .navicon-button .navicon:after {
    transition: .5s/2; }
  .navicon-button:hover {
    transition: .5s;
    opacity: 1; }
    .navicon-button:hover .navicon:before, .navicon-button:hover .navicon:after {
      transition: .5s/2; }
    .navicon-button:hover .navicon:before {
      top: .725rem; }
    .navicon-button:hover .navicon:after {
      top: -.725rem; }

.navicon {
  position: relative;
  width: 1.5em;
  height: .3125rem;
  background: #EA6852;
  transition: .5s;
  border-radius: 2.5rem; }
  .navicon:before, .navicon:after {
    display: block;
    content: "";
    height: .3125rem;
    width: 1.6rem;
    background: #EA6852;
    position: absolute;
    z-index: -1;
    transition: top .06s ease-in-out;
    border-radius: 1rem; }
  .navicon:before {
    top: .625rem; }
  .navicon:after {
    top: -.625rem; }

.open:not(.steps) .navicon:before,
.open:not(.steps) .navicon:after {
  top: 0 !important; }

.open .navicon:before,
.open .navicon:after {
  transition: .5s; }

/* Arrow */
.open.rarr .navicon:before, .open.rarr .navicon:after {
  width: 1.2rem; }

.open.rarr .navicon:before {
  transform: rotate(35deg);
  transform-origin: left top; }

.open.rarr .navicon:after {
  transform: rotate(-35deg);
  transform-origin: left bottom; }

.open.rarr .navicon:before {
  transform: translate3d(0.5em, -1px, 0) rotate(-35deg);
  transform-origin: right top; }

.open.rarr .navicon:after {
  transform: translate3d(0.5em, 1px, 0) rotate(35deg);
  transform-origin: right bottom; }

@media screen and (max-width: 960px) {
  header {
    z-index: 8; }
  nav {
    padding: 10px 0;
    align-items: center; }
  /* mobile menu button */
  #roundButton {
    display: inline-block; }
  .nav-menu {
    position: fixed;
    width: 100vw;
    height: 100vh;
    text-align: center;
    background-color: #CCCCCC;
    margin: 0;
    padding: 40px 0 0;
    top: 0;
    left: 0;
    transform: translate3d(100vw, 0, 0);
    transition: transform 0.5s cubic-bezier(0, 0.52, 0, 1);
    overflow-y: scroll; }
  #nav-menu.show {
    transform: translate3d(0vw, 0, 0); }
  .nav-menu li {
    display: block;
    padding: 20px; }
  .nav-menu li:hover {
    cursor: pointer; }
  .sub-menu {
    height: 0;
    opacity: 1;
    position: relative;
    overflow: hidden;
    transition: height 0.3s ease-out, margin 0.3s ease-out; }
  .sub-menu li {
    text-align: center; } }

/*TODO: Move other sections to their own scss file for better management */
/*==== #MAIN-BANNER ====*/
#main-banner {
  background-image: url("../images/banner/oskar-krawczyk-172847-unsplash.jpg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  height: 648px;
  background-color: #65646A; }

/*==== #MAIN-SECTION ====*/
#main-section {
  background-color: #F9F9F9; }

/*==== #Back-to-Top Icon ====*/
#btt-icon {
  display: none;
  width: 46px;
  height: 50px;
  position: fixed;
  bottom: 40px;
  right: 40px;
  background-color: rgba(136, 136, 136, 0.18);
  cursor: pointer;
  border-radius: .2rem; }

#btt-arrow {
  position: relative;
  top: 8px;
  left: 20px;
  width: .4em;
  height: 2.2rem;
  background: #EA6852;
  transition: .5s;
  border-radius: 2.5rem;
  z-index: 99; }
  #btt-arrow:before, #btt-arrow:after {
    display: block;
    content: "";
    height: 1.4rem;
    width: .45rem;
    background: #EA6852;
    position: absolute;
    z-index: 99;
    transition: .5s .5s/2;
    border-radius: 1rem; }
  #btt-arrow:before {
    transform: rotate(35deg);
    transform-origin: left top; }
  #btt-arrow:after {
    left: .8rem;
    transform: rotate(-35deg);
    transform-origin: left bottom; }

@keyframes bounceUp {
  0% {
    -webkit-transform: translateY(0px);
    -moz-transform: translateY(0px);
    -o-transform: translateY(0px);
    -ms-transform: translateY(0px);
    transform: translateY(0px); }
  100% {
    -webkit-transform: translateY(-12px);
    -moz-transform: translateY(-12px);
    -o-transform: translateY(-12px);
    -ms-transform: translateY(-12px);
    transform: translateY(-12px); } }

/*==== Media Queries ====*/
/* Large screens ----------- */
@media only screen and (min-width: 1824px) {
  /* Styles */ }

/* Desktops and laptops ----------- */
@media only screen and (min-width: 1224px) {
  /* Styles */ }

/* iPads (portrait and landscape) ----------- */
@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {
  /* Styles */ }

/* Smartphones (landscape) ----------- */
@media only screen and (min-width: 321px) {
  /* Styles */ }

/* Smartphones (portrait) ----------- */
@media only screen and (max-width: 320px) {
  /* Styles */ }
